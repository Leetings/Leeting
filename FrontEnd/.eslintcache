[{"C:\\Leeting_git\\Leeting\\FrontEnd\\src\\index.js":"1","C:\\Leeting_git\\Leeting\\FrontEnd\\src\\App.js":"2","C:\\Leeting_git\\Leeting\\FrontEnd\\src\\components\\Header.js":"3","C:\\Leeting_git\\Leeting\\FrontEnd\\src\\routes\\Join.js":"4","C:\\Leeting_git\\Leeting\\FrontEnd\\src\\components\\Footer.js":"5","C:\\Leeting_git\\Leeting\\FrontEnd\\src\\routes\\Find.js":"6","C:\\Leeting_git\\Leeting\\FrontEnd\\src\\routes\\Login.js":"7","C:\\Leeting_git\\Leeting\\FrontEnd\\src\\routes\\Home.js":"8","C:\\Leeting_git\\Leeting\\FrontEnd\\src\\routes\\NotFound.js":"9","C:\\Leeting_git\\Leeting\\FrontEnd\\src\\routes\\Leeting.js":"10"},{"size":239,"mtime":1611031074034,"results":"11","hashOfConfig":"12"},{"size":1010,"mtime":1611031074020,"results":"13","hashOfConfig":"12"},{"size":3227,"mtime":1611035368835,"results":"14","hashOfConfig":"12"},{"size":21491,"mtime":1611119104668,"results":"15","hashOfConfig":"12"},{"size":1015,"mtime":1611031074022,"results":"16","hashOfConfig":"12"},{"size":16788,"mtime":1611119104666,"results":"17","hashOfConfig":"12"},{"size":4072,"mtime":1611035368845,"results":"18","hashOfConfig":"12"},{"size":6365,"mtime":1611031074037,"results":"19","hashOfConfig":"12"},{"size":1168,"mtime":1611031074041,"results":"20","hashOfConfig":"12"},{"size":1775,"mtime":1611103653440,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"883lue",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Leeting_git\\Leeting\\FrontEnd\\src\\index.js",[],["47","48"],"C:\\Leeting_git\\Leeting\\FrontEnd\\src\\App.js",[],"C:\\Leeting_git\\Leeting\\FrontEnd\\src\\components\\Header.js",["49","50","51","52","53"],"import React, { Component } from 'react';\r\nimport \"./Header.css\";\r\n\r\nclass Header extends Component {\r\n    \r\n    state = {\r\n        token: ''\r\n    }\r\n    componentDidMount() {\r\n        // nologin = React.createRef();\r\n    if (sessionStorage.getItem(\"token\") != null) {\r\n        console.log(\"로그인\");\r\n        // this.nologin.Attribute('style', 'display:none');\r\n        document.getElementById('nologin').setAttribute('style', 'display:none');\r\n        document.getElementById('login').setAttribute('style', 'display:block');\r\n        // document.getElementsByClassName(\"nologin\").setAttribute('style', 'display:none');\r\n        // document.getElementsByClassName(\"login\").setAttribute('style', 'display:block');\r\n    }\r\n    else {\r\n        console.log(\"노로그인\");\r\n        document.getElementById('login').setAttribute('style', 'display:none');\r\n        document.getElementById('nologin').setAttribute('style', 'display:block');\r\n    }\r\n    }\r\n    logout = (e) => {\r\n        window.sessionStorage.clear();\r\n        window.location.replace(\"/\");\r\n    };\r\n    render(){\r\n        return (\r\n            <div id=\"header\">\r\n                <div className=\"gtop\">\r\n                    <div className=\"dvwrap\">\r\n                    <a className=\"logo\" href=\"/\">\r\n                        Leeting입니다\r\n                    </a>\r\n                    <div className=\"topsearch\">\r\n                        <form name=\"searchForm\">\r\n                            <input type=\"text\" name=\"searchVal\" placeholder=\"검색어를 입력하세요\">\r\n                            </input>\r\n                            <a href=\"#\">검색</a>\r\n                        </form>\r\n                    </div>\r\n                    <div id=\"nologin\">\r\n                        <ul>\r\n                            <li><a href=\"/join\">회원가입</a></li>\r\n                            <li><a href=\"/Login\">로그인</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div id=\"login\">\r\n                        <ul>\r\n                            <li><a href=\"/\">{sessionStorage.getItem(\"nickname\")}님 환영합니다</a></li>\r\n                            <li><a onClick={this.logout}>로그아웃</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"headerWrap\">\r\n                    <div className=\"gnb cB\" id=\"gnb\">\r\n                        <ul className=\"topmenu\" id=\"head-menu\">\r\n                            <li className=\"lnb1\">\r\n                                <a href=\"/Leeting\">Leeting</a>\r\n                            </li>\r\n                            <li className=\"lnb2\">\r\n                                <a href=\"#\" >메뉴2</a>\r\n                            </li>\r\n                            <li className=\"lnb3\">\r\n                                <a href=\"#\" >메뉴3</a>\r\n                            </li>\r\n                            <li className=\"lnb4\">\r\n                                <a href=\"#\" >메뉴4</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n  \r\n}\r\n\r\nexport default Header;","C:\\Leeting_git\\Leeting\\FrontEnd\\src\\routes\\Join.js",["54","55","56","57","58"],"import React from \"react\";\r\nimport \"./Join.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from \"axios\";\r\n\r\nclass Join extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n    this.state = {\r\n      value: '선택하세요',\r\n      checkId: false,\r\n      checkPw: false,\r\n      checkName: false,\r\n      checkNickname: false,\r\n      checkEmail: false,\r\n      checkMobile: false\r\n    };\r\n  }\r\n  state ={\r\n    id: \"\",\r\n    pw: \"\",\r\n    name: \"\",\r\n    nickname: \"\",\r\n    email: \"\",\r\n    domain: \"\",\r\n    mobile: \"\",\r\n    token:\"\",\r\n    auth:\"\",\r\n  }\r\n  \r\n  handleChange = (event) => {\r\n    if (event.target.value != '직접입력') {\r\n      this.setState({\r\n        value: event.target.value,\r\n        domain: event.target.value,\r\n        checkEmail: true\r\n      });\r\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\r\n      //   document.getElementById('joinbtn').disabled = false;\r\n      // }\r\n      // console.log(event.target.value);\r\n      document.getElementById('validateDomain').textContent = \"\";\r\n          document.getElementById('writedomain').value = event.target.value;\r\n          document.getElementById('writedomain').readOnly=true;\r\n      }\r\n    else {\r\n      this.setState({\r\n        value: event.target.value,\r\n        checkEmail: false\r\n      });\r\n      // document.getElementById('joinbtn').disabled = true;\r\n          document.getElementById('writedomain').readOnly = false;\r\n          document.getElementById('writedomain').value = \"\";\r\n          document.getElementById('writedomain').placeholder = \"입력하세요\";\r\n      }\r\n  }\r\n  idChange = (e) => {\r\n    var idReg = /^[a-z]+[a-z0-9]{5,19}$/g;\r\n    if (!idReg.test(e.target.value)) {\r\n      document.getElementById('validateId').textContent = \"아이디는 영어 소문자로 시작하는 6~20자 영어 소문자 또는 숫자이어야 합니다.\";\r\n      document.getElementById('validateId').setAttribute('style', 'color: #ff3535');\r\n    }\r\n    else {\r\n      document.getElementById('validateId').textContent = \"\";\r\n      this.setState({\r\n          id: e.target.value,\r\n      });\r\n    }\r\n  };\r\n  \r\n  pwChange = (e) => {\r\n    var pwReg = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/g;\r\n    \r\n    if (!pwReg.test(e.target.value)) {\r\n      this.setState({\r\n        checkPw:false\r\n    }); \r\n    // document.getElementById('joinbtn').disabled = true;\r\n      document.getElementById('validatePw').textContent = \"비밀번호는 8자 이상의 문자, 숫자, 특수 문자 조합이어야 합니다.\";\r\n      document.getElementById('validatePw').setAttribute('style', 'color: #ff3535');\r\n    }\r\n    else {\r\n      document.getElementById('validatePw').textContent = \"사용가능한 비밀번호 입니다.\";\r\n      document.getElementById('validatePw').setAttribute('style', 'color:blue');\r\n      this.setState({\r\n          pw: e.target.value,\r\n          checkPw:true\r\n      }); \r\n    }\r\n\r\n    \r\n    if (document.getElementById('inputCPw').value != e.target.value) {\r\n      this.setState({\r\n        checkPw:false\r\n    }); \r\n    // document.getElementById('joinbtn').disabled = true;\r\n      document.getElementById('validateCPw').textContent = \"비밀번호가 다릅니다.\";\r\n      document.getElementById('validateCPw').setAttribute('style', 'color: #ff3535');\r\n    }\r\n    else{\r\n      this.setState({\r\n        checkPw:true\r\n      })\r\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\r\n        // document.getElementById('joinbtn').disabled = false;\r\n      // }\r\n      document.getElementById('validateCPw').textContent = \"확인되었습니다.\";\r\n      document.getElementById('validateCPw').setAttribute('style', 'color:blue');\r\n    }\r\n\r\n    // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\r\n    //   document.getElementById('joinbtn').disabled = false;\r\n    // }\r\n    // console.log(this.state.checkPw);\r\n  };\r\n\r\n  cpwChange = (e) => {\r\n    if (e.target.value === '') {\r\n      this.setState({\r\n        checkPw: false\r\n      });\r\n      // document.getElementById('joinbtn').disabled = true;\r\n      document.getElementById('validateCPw').textContent = \"\";\r\n    }\r\n    else if (document.getElementById('inputPw').value === e.target.value) {\r\n      this.setState({\r\n        checkPw:true\r\n      })\r\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\r\n      //   document.getElementById('joinbtn').disabled = false;\r\n      // }\r\n      document.getElementById('validateCPw').textContent = \"확인되었습니다.\";\r\n      document.getElementById('validateCPw').setAttribute('style', 'color:blue');\r\n    }\r\n    else {\r\n      this.setState({\r\n        checkPw: false\r\n      });\r\n      \r\n      // document.getElementById('joinbtn').disabled = true;\r\n      document.getElementById('validateCPw').textContent = \"비밀번호가 다릅니다.\";\r\n      document.getElementById('validateCPw').setAttribute('style', 'color: #ff3535');\r\n    }\r\n    // console.log(this.state.checkPw);\r\n  };\r\n\r\n  nameChange = (e) => {\r\n    var nameReg = /^[가-힣]{2,4}$/g;\r\n    if (!nameReg.test(e.target.value)) {\r\n      this.setState({\r\n        checkName: false\r\n      });\r\n      // document.getElementById('joinbtn').disabled = true;\r\n      document.getElementById('validateName').textContent = \"이름은 2~4자 사이의 한국어 입니다.\";\r\n      document.getElementById('validateName').setAttribute('style', 'color: #ff3535');\r\n    }\r\n    else {\r\n      document.getElementById('validateName').textContent = \"\";\r\n      this.setState({\r\n        name: e.target.value,\r\n        checkName:true\r\n      });\r\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\r\n      //   document.getElementById('joinbtn').disabled = false;\r\n      // }\r\n    }\r\n  };\r\n\r\n  nicknameChange = (e) => {\r\n    var nickNameReg = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|\\*]{2,10}$/g;\r\n    if (!nickNameReg.test(e.target.value)) {\r\n      this.setState({\r\n        checkNickname: false\r\n      });\r\n      // document.getElementById('joinbtn').disabled = true;\r\n      document.getElementById('validateNickName').textContent = \"닉네임은 2~10자 사이의 한국어, 영어, 숫자로 이루어져 있습니다.\";\r\n    }\r\n    else {\r\n      document.getElementById('validateNickName').textContent = \"\";\r\n      this.setState({\r\n        nickname: e.target.value,\r\n      });\r\n      // console.log(e.target.value);\r\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\r\n      //   document.getElementById('joinbtn').disabled = false;\r\n      // }\r\n      // console.log(this.state.checkNickname);\r\n    }\r\n  };\r\n  emailChange = (e) => {\r\n    this.setState({\r\n        email: e.target.value,\r\n    });\r\n  };\r\n  domainChange = (e) => {\r\n    var domainReg = /^([0-9a-zA-Z_-]+)(\\.[0-9a-zA-Z_-]+){2,3}$/g;\r\n    if (!domainReg.test(e.target.value)) {\r\n      this.setState({\r\n        checkEmail: false\r\n      });\r\n      // document.getElementById('joinbtn').disabled = true;\r\n      // document.getElementById('validateDomain').textContent = \"정확한 도메인을 입력해주세요\";\r\n      // document.getElementById('validateDomain').setAttribute('style', 'color: #ff3535');\r\n    }\r\n    else {\r\n      document.getElementById('validateDomain').textContent = \"\";\r\n    }\r\n  };\r\n  mobileChange = (e) => {\r\n    var phoneReg = /^\\d{3}-\\d{3,4}-\\d{4}$/;\r\n    if (!phoneReg.test(e.target.value)) {\r\n      this.setState({\r\n        checkMobile: false\r\n      });\r\n      // document.getElementById('joinbtn').disabled = true;\r\n      document.getElementById('validatePhone').textContent = \"휴대폰 번호는 010-1234-5678 형식으로 입력해주세요.\";\r\n      document.getElementById('validatePhone').setAttribute('style', 'color: #ff3535');\r\n    }\r\n    else {\r\n      // console.log(this.state.checkMobile);\r\n      this.setState({\r\n        mobile: e.target.value,\r\n        checkMobile:true\r\n      });\r\n      // console.log('test1 : ' + e.target.value);\r\n      document.getElementById('validatePhone').textContent = \"\";\r\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\r\n      //   document.getElementById('joinbtn').disabled = false;\r\n      // }\r\n      // console.log(this.state.checkMobile);\r\n    }\r\n    \r\n  };\r\n  sameClick = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state.id);\r\n    \r\n    var idReg = /^[a-z]+[a-z0-9]{5,19}$/g;\r\n    if (!idReg.test(e.target.value)) {\r\n      axios.post('http://127.0.0.1:8080/myapp/member/same', {\r\n        id: this.state.id\r\n      }).then(res => {\r\n        // console.log(res.data);\r\n        if (res.data === \"SUCESS\") {\r\n          this.setState({\r\n            checkId: true\r\n          });\r\n          document.getElementById('validateId').textContent = \"사용가능한 아이디입니다.\";\r\n          document.getElementById('validateId').setAttribute('style', 'color:blue');\r\n          // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\r\n          //   document.getElementById('joinbtn').disabled = false;\r\n          // }\r\n        }\r\n        else {\r\n          this.setState({\r\n            checkId: false\r\n          });\r\n          // document.getElementById('joinbtn').disabled = true;\r\n          document.getElementById('validateId').textContent = \"이미 존재하는 아이디입니다.\";\r\n          document.getElementById('validateId').setAttribute('style', 'color: #ff3535');\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  sameNickClick = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state.id);\r\n    \r\n    var nickNameReg = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|\\*]{2,10}$/g;\r\n    if (!nickNameReg.test(e.target.value)) {\r\n      axios.post('http://127.0.0.1:8080/myapp/member/samenick', {\r\n        nickname: this.state.nickname\r\n      }).then(res => {\r\n        // console.log(res.data);\r\n        if (res.data === \"SUCESS\") {\r\n          this.setState({\r\n            checkNickname: true\r\n          });\r\n          document.getElementById('validateNickName').textContent = \"사용가능한 닉네임입니다.\";\r\n          document.getElementById('validateNickName').setAttribute('style', 'color:blue');\r\n          // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\r\n          //   document.getElementById('joinbtn').disabled = false;\r\n          // }\r\n        }\r\n        else {\r\n          this.setState({\r\n            checkNickname: false\r\n          });\r\n          document.getElementById('validateNickName').textContent = \"이미 존재하는 닉네임입니다.\";\r\n          document.getElementById('validateNickName').setAttribute('style', 'color: #ff3535');\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  /*인증번호 전송*/\r\n  authCheck = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state.email + \"@\" + this.state.domain);\r\n    axios.post('http://127.0.0.1:8080/myapp/member/email', {\r\n        email: this.state.email + \"@\" + this.state.domain,\r\n      }).then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n        this.setState({\r\n          token: res.data\r\n        })\r\n        document.getElementById('auth').disabled = false;\r\n        // document.getElementById('sendtoken').setAttribute('style', 'display:none');\r\n        document.getElementById('checktoken').setAttribute('style', 'display:inline-block');\r\n      })\r\n  };\r\n\r\n  authChange = (e) => {\r\n    this.setState({\r\n      auth: e.target.value\r\n    });\r\n  }\r\n  emailtokenCheck = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(this.state.auth);\r\n    console.log(this.state.token);\r\n\r\n    axios.post('http://127.0.0.1:8080/myapp/member/auth', {\r\n      token: this.state.token,\r\n      auth: this.state.auth,      \r\n      }).then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n        if (res.data === \"SUCCESS\") {\r\n          this.setState({\r\n            checkEmail: true\r\n          });\r\n          document.getElementById('auth').disabled = true;\r\n          document.getElementById('sendtoken').setAttribute('style', 'display:none');\r\n          document.getElementById('checktoken').setAttribute('style', 'display:none');\r\n        \r\n          document.getElementById('validateDomain').textContent = \"인증번호가 확인되었습니다.\";\r\n          document.getElementById('validateDomain').setAttribute('style', 'color: blue');\r\n        } else {\r\n          document.getElementById('sendtoken').setAttribute('style', 'display:inline-block');\r\n          document.getElementById('validateDomain').textContent = \"인증번호를 재확인해주세요\";\r\n          document.getElementById('validateDomain').setAttribute('style', 'color: #ff3535');\r\n        }\r\n      })\r\n  };\r\n\r\n  handleClick = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\r\n      axios.post('http://127.0.0.1:8080/myapp/member/join', {\r\n        id: this.state.id,\r\n        pw: this.state.pw,\r\n        nickname: this.state.nickname,\r\n        name: this.state.name,\r\n        email: this.state.email + \"@\" + this.state.domain,\r\n        mobile : this.state.mobile\r\n      }).then(res => {\r\n        //console.log(res);\r\n        // console.log(res.data);\r\n        if (res.data === \"SUCESS\") {\r\n          alert(\"환영합니다~ 로그인 페이지로 이동합니다.\");\r\n          console.log(\"회원가입 완료\");\r\n          this.props.history.push('/login');\r\n        }\r\n        else {\r\n          alert(\"회원가입에 실패하였습니다. 메인 페이지로 이동합니다.\");\r\n          console.log(\"회원가입 실패\");\r\n          this.props.history.push('/');\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      alert(\"입력 정보를 확인해주세요!\");\r\n      console.log(\"미입력여부\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"joinContainer\">\r\n        <h1 className=\"tit\">회 원 가 입</h1>\r\n        <hr />\r\n        <div className=\"formcenter\">\r\n          <div>\r\n            {/* <form action=\"submit\" className=\"signupcustom\" > */}\r\n              \r\n              <div className=\"form-group\">\r\n                <div className=\"col-12\">\r\n                  <label id=\"labelId\" className=\"font-weight-bold\" htmlFor=\"inputId\">아이디</label>\r\n                <input type=\"text\" name=\"uid\" id=\"inputId\" className=\"col-9 form-control margin-bottom-20\" placeholder=\"아이디를 입력해주세요\" onChange={this.idChange}></input>\r\n                <button id=\"checkId\" className=\"btn\" onClick={this.sameClick}>중복 확인</button>\r\n                </div>\r\n                <label id=\"validateId\"></label>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"col-9\">\r\n                  <label id=\"labelPw\" className=\"font-weight-bold\" htmlFor=\"inputPw\">비밀번호</label>\r\n                  <input type=\"password\" id=\"inputPw\" className=\"form-control margin-bottom-20\" placeholder=\"비밀번호를 입력해주세요\" onChange={this.pwChange}></input>\r\n                </div>\r\n                <label id=\"validatePw\"></label>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"col-9\">\r\n                  <label className=\"font-weight-bold\" id=\"labelCPw\" htmlFor=\"inputCPw\">비밀번호 확인</label>\r\n                  <input type=\"password\" id=\"inputCPw\" className=\"form-control margin-bottom-20\" placeholder=\"확인용 비밀번호를 입력해주세요\" onChange={this.cpwChange}></input>\r\n                </div>\r\n                <label id=\"validateCPw\"></label>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"col-9\">\r\n                  <label className=\"font-weight-bold\" id=\"labelName\" htmlFor=\"inputName\">성명</label>\r\n                  <input type=\"text\" id=\"inputName\" className=\"form-control margin-bottom-20\" placeholder=\"한글 이름을 입력해주세요\" onChange ={this.nameChange}></input>\r\n                </div>\r\n                <label id=\"validateName\"></label>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"col-12\">\r\n                  <label className=\"font-weight-bold\" id=\"labelNickName\" htmlFor=\"inputNickName\">닉네임</label>\r\n                <input type=\"text\" id=\"inputNickName\" className=\"col-9 form-control margin-bottom-20\" placeholder=\"닉네임을 입력해주세요\" onChange={this.nicknameChange}></input>\r\n                <button id=\"checkNickName\" className=\"btn\" onClick={this.sameNickClick}>중복 확인</button>\r\n                </div>\r\n                <label id=\"validateNickName\"></label>\r\n              </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"col-12\">\r\n                  <label id=\"labelEmail\" className=\"font-weight-bold foremail\" htmlFor=\"email\">이메일</label>\r\n                  <input type=\"text\" id=\"email\" name=\"inputEmail\" className=\"form-control col-4 margin-bottom-20\" placeholder=\"이메일을 입력해주세요\" onChange={this.emailChange}></input>\r\n                  &nbsp;<label id=\"at\">@</label>&nbsp;\r\n                  <input id=\"writedomain\" name=\"inputdomain\" className=\"form-control col-4 margin-bottom-20 inputdomain\" placeholder=\"선택하세요\" onChange={this.domainChange} readOnly></input>&nbsp;\r\n                  <select id=\"domain\" name=\"selectdomain\" className=\"form-control col-3 margin-bottom-20\" value={this.state.value} onChange={this.handleChange}>\r\n                          <option value=\"선택하세요\" defaultValue>선택하세요</option>\r\n                          <option value=\"kakao.com\" >kakao.com</option>\r\n                          <option value=\"naver.com\">naver.com</option>\r\n                          <option value=\"daum.net\">daum.net</option>\r\n                          <option value=\"직접입력\">직접입력</option>\r\n                  </select>\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <input type=\"text\" id=\"auth\" className=\"form-control col-4 margin-bottom-20\" onChange={this.authChange} disabled></input>\r\n                <button id=\"sendtoken\" className=\"btn\" onClick={this.authCheck}>인증번호 전송</button>\r\n                <button id=\"checktoken\" className=\"btn\" onClick={this.emailtokenCheck}>인증번호 확인</button>\r\n              </div>\r\n                <label id=\"validateDomain\"></label>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"col-9\">\r\n                  <label className=\"font-weight-bold\" id=\"labelPhone\" htmlFor=\"inputPhone\">휴대전화 번호</label>\r\n                  <input type=\"tel\" id=\"inputPhone\" className=\"form-control margin-bottom-20\" placeholder=\"휴대폰 번호를 입력해주세요\" onChange={this.mobileChange}></input>\r\n                </div>\r\n                <label id=\"validatePhone\"></label>\r\n              </div>\r\n              <br />\r\n              <div className=\"form-group\">\r\n                <div className=\"col-12 text-center\">\r\n                  <input type=\"checkbox\" id=\"checkjoin\"></input>&nbsp;\r\n                    <label htmlFor=\"checkjoin\"><span></span> Leeting의 이용약관, 개인정보취급방침 및 개인정보3자제공에 동의합니다.</label>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <div className=\"row form-group\">\r\n                <div className=\"col-6 text-right\">\r\n                  <a href=\"\" className=\"btn btn-light\">돌아가기</a>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <button type=\"submit\" id=\"joinbtn\" className=\"btn btn-primary\" onClick={this.handleClick}>가입하기</button>\r\n                </div>\r\n              </div>\r\n              \r\n            {/* </form> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Join;","C:\\Leeting_git\\Leeting\\FrontEnd\\src\\components\\Footer.js",["59","60","61"],"import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div id=\"footer\">\r\n        <div className=\"footerdiv\">\r\n            <ul className=\"fnb\">\r\n                <li><a href=\"/\">이용약관</a></li>\r\n                <li><a href=\"/\">개인정보처리방침</a></li>\r\n            </ul>\r\n            <ul className=\"ftsns\">\r\n                <li className=\"insta\"><a href=\"/\" target=\"_blank\"></a></li>\r\n                <li className=\"youtube\"><a href=\"/\" target=\"_blank\"></a></li>\r\n                <li className=\"kakao\"><a href=\"/\" target=\"_blank\"></a></li>\r\n            </ul>\r\n            <div className=\"fttxt\">\r\n                고객센터  02-1234-5678  |  평일 상담시간  09:00 ~ 18:00<br/>\r\n                본 사이트의 콘텐츠는 저작권법의 보호를 받는 바 무단 전재, 복사, 배포 등을 금합니다.<br/>\r\n                Copyright © Leeting All Rights Reserved.\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","C:\\Leeting_git\\Leeting\\FrontEnd\\src\\routes\\Find.js",["62","63"],"C:\\Leeting_git\\Leeting\\FrontEnd\\src\\routes\\Login.js",[],"C:\\Leeting_git\\Leeting\\FrontEnd\\src\\routes\\Home.js",[],"C:\\Leeting_git\\Leeting\\FrontEnd\\src\\routes\\NotFound.js",["64","65"],"import React, { useEffect } from 'react';\r\nimport \"./NotFound.css\"\r\n\r\nfunction NotFound({ history }) {\r\n    const goBack = () => {\r\n        history.goBack();\r\n    };\r\n    const goHome = () => {\r\n        history.push('/');\r\n      };\r\n    \r\n      useEffect(() => {\r\n        console.log(history);\r\n        const unblock = history.block('정말 떠나실건가요?');\r\n        return () => {\r\n          unblock();\r\n        };\r\n      }, [history]);\r\n    \r\n    return (\r\n        <div className='notFoundCon'>\r\n            <img src=\"img/404error.png\" alt=\"404에러\"></img>\r\n            <p className=\"tit\">페이지를 <span>찾을 수 없습니다.</span><br />\r\n            (404 Not Found)</p>\r\n            <p className=\"subtit\">페이지가 존재하지 않거나, 사용할 수 없는 페이지입니다.<br />\r\n            입력하신 주소가 정확한지 다시 한 번 확인해 주시기 바랍니다.</p>\r\n\r\n            <div className=\"btndiv\">\r\n                <a className=\"goBack\" onClick={goBack}>이전 화면</a>\r\n                <a className=\"goHome\" onClick={goHome}>홈으로</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","C:\\Leeting_git\\Leeting\\FrontEnd\\src\\routes\\Leeting.js",["66"],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":41,"column":29,"nodeType":"73","endLine":41,"endColumn":41},{"ruleId":"71","severity":1,"message":"74","line":53,"column":33,"nodeType":"73","endLine":53,"endColumn":58},{"ruleId":"71","severity":1,"message":"72","line":65,"column":33,"nodeType":"73","endLine":65,"endColumn":46},{"ruleId":"71","severity":1,"message":"72","line":68,"column":33,"nodeType":"73","endLine":68,"endColumn":46},{"ruleId":"71","severity":1,"message":"72","line":71,"column":33,"nodeType":"73","endLine":71,"endColumn":46},{"ruleId":"75","severity":1,"message":"76","line":32,"column":28,"nodeType":"77","messageId":"78","endLine":32,"endColumn":30},{"ruleId":"75","severity":1,"message":"76","line":92,"column":51,"nodeType":"77","messageId":"78","endLine":92,"endColumn":53},{"ruleId":"79","severity":1,"message":"80","line":170,"column":46,"nodeType":"81","messageId":"82","endLine":170,"endColumn":47,"suggestions":"83"},{"ruleId":"79","severity":1,"message":"80","line":270,"column":46,"nodeType":"81","messageId":"82","endLine":270,"endColumn":47,"suggestions":"84"},{"ruleId":"71","severity":1,"message":"72","line":465,"column":19,"nodeType":"73","endLine":465,"endColumn":56},{"ruleId":"85","severity":1,"message":"86","line":13,"column":39,"nodeType":"73","endLine":13,"endColumn":67},{"ruleId":"85","severity":1,"message":"86","line":14,"column":41,"nodeType":"73","endLine":14,"endColumn":69},{"ruleId":"85","severity":1,"message":"86","line":15,"column":39,"nodeType":"73","endLine":15,"endColumn":67},{"ruleId":"75","severity":1,"message":"76","line":173,"column":32,"nodeType":"77","messageId":"78","endLine":173,"endColumn":34},{"ruleId":"75","severity":1,"message":"76","line":198,"column":32,"nodeType":"77","messageId":"78","endLine":198,"endColumn":34},{"ruleId":"71","severity":1,"message":"74","line":29,"column":17,"nodeType":"73","endLine":29,"endColumn":56},{"ruleId":"71","severity":1,"message":"74","line":30,"column":17,"nodeType":"73","endLine":30,"endColumn":56},{"ruleId":"87","severity":1,"message":"88","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":14},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\*.","Literal","unnecessaryEscape",["93","94"],["95","96"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-unused-vars","'Slider' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"messageId":"97","fix":"98","desc":"99"},{"messageId":"100","fix":"101","desc":"102"},{"messageId":"97","fix":"103","desc":"99"},{"messageId":"100","fix":"104","desc":"102"},"removeEscape",{"range":"105","text":"106"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"107","text":"108"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"109","text":"106"},{"range":"110","text":"108"},[6291,6292],"",[6291,6291],"\\",[10243,10244],[10243,10243]]