[{"P:\\Leeting\\Git\\FrontEnd\\src\\index.js":"1","P:\\Leeting\\Git\\FrontEnd\\src\\App.js":"2","P:\\Leeting\\Git\\FrontEnd\\src\\components\\Footer.js":"3","P:\\Leeting\\Git\\FrontEnd\\src\\components\\Header.js":"4","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Home.js":"5","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Join.js":"6","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Login.js":"7","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Find.js":"8","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\NotFound.js":"9","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Leeting.js":"10","P:\\Leeting\\working\\FrontEnd\\src\\index.js":"11","P:\\Leeting\\working\\FrontEnd\\src\\App.js":"12","P:\\Leeting\\working\\FrontEnd\\src\\components\\Header.js":"13","P:\\Leeting\\working\\FrontEnd\\src\\routes\\Find.js":"14","P:\\Leeting\\working\\FrontEnd\\src\\routes\\Join.js":"15","P:\\Leeting\\working\\FrontEnd\\src\\routes\\Home.js":"16","P:\\Leeting\\working\\FrontEnd\\src\\components\\Footer.js":"17","P:\\Leeting\\working\\FrontEnd\\src\\routes\\Login.js":"18","P:\\Leeting\\working\\FrontEnd\\src\\routes\\Leeting.js":"19","P:\\Leeting\\working\\FrontEnd\\src\\routes\\NotFound.js":"20"},{"size":233,"mtime":1610882764000,"results":"21","hashOfConfig":"22"},{"size":978,"mtime":1611021590941,"results":"23","hashOfConfig":"22"},{"size":989,"mtime":1610882764000,"results":"24","hashOfConfig":"22"},{"size":1465,"mtime":1611021658582,"results":"25","hashOfConfig":"22"},{"size":6226,"mtime":1611022863176,"results":"26","hashOfConfig":"22"},{"size":18738,"mtime":1610957862905,"results":"27","hashOfConfig":"22"},{"size":3679,"mtime":1611021547690,"results":"28","hashOfConfig":"22"},{"size":5089,"mtime":1610882764000,"results":"29","hashOfConfig":"22"},{"size":1133,"mtime":1610882764000,"results":"30","hashOfConfig":"22"},{"size":309,"mtime":1611023076460,"results":"31","hashOfConfig":"22"},{"size":233,"mtime":1610882764000,"results":"32","hashOfConfig":"33"},{"size":978,"mtime":1611021590941,"results":"34","hashOfConfig":"33"},{"size":3146,"mtime":1611034447975,"results":"35","hashOfConfig":"33"},{"size":16181,"mtime":1611057631490,"results":"36","hashOfConfig":"33"},{"size":20716,"mtime":1611050243739,"results":"37","hashOfConfig":"33"},{"size":6226,"mtime":1611022863176,"results":"38","hashOfConfig":"33"},{"size":989,"mtime":1610882764000,"results":"39","hashOfConfig":"33"},{"size":3978,"mtime":1611034011383,"results":"40","hashOfConfig":"33"},{"size":309,"mtime":1611023076460,"results":"41","hashOfConfig":"33"},{"size":1133,"mtime":1610882764000,"results":"42","hashOfConfig":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"ou3266",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1d1pgq1",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"72"},"P:\\Leeting\\Git\\FrontEnd\\src\\index.js",[],["93","94"],"P:\\Leeting\\Git\\FrontEnd\\src\\App.js",[],"P:\\Leeting\\Git\\FrontEnd\\src\\components\\Footer.js",["95","96","97"],"import React from \"react\";\nimport \"./Footer.css\";\n\nfunction Footer() {\n  return (\n    <div id=\"footer\">\n        <div className=\"footerdiv\">\n            <ul className=\"fnb\">\n                <li><a href=\"/\">이용약관</a></li>\n                <li><a href=\"/\">개인정보처리방침</a></li>\n            </ul>\n            <ul className=\"ftsns\">\n                <li className=\"insta\"><a href=\"/\" target=\"_blank\"></a></li>\n                <li className=\"youtube\"><a href=\"/\" target=\"_blank\"></a></li>\n                <li className=\"kakao\"><a href=\"/\" target=\"_blank\"></a></li>\n            </ul>\n            <div className=\"fttxt\">\n                고객센터  02-1234-5678  |  평일 상담시간  09:00 ~ 18:00<br/>\n                본 사이트의 콘텐츠는 저작권법의 보호를 받는 바 무단 전재, 복사, 배포 등을 금합니다.<br/>\n                Copyright © Leeting All Rights Reserved.\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default Footer;","P:\\Leeting\\Git\\FrontEnd\\src\\components\\Header.js",["98","99","100","101"],"import React from \"react\";\nimport \"./Header.css\";\n\nfunction Header() {\n  return (\n    <div id=\"header\">\n        <div className=\"gtop\">\n            <div className=\"dvwrap\">\n            <a className=\"logo\" href=\"/\">\n                Leeting입니다\n            </a>\n            <div className=\"topsearch\">\n                <form name=\"searchForm\">\n                          <input type=\"text\" name=\"searchVal\" placeholder=\"검색어를 입력하세요\">\n                              </input>\n                    <a href=\"#\">검색</a>\n                </form>\n            </div>\n            <ul>\n                <li><a href=\"/join\">회원가입</a></li>\n                <li><a href=\"/Login\">로그인</a></li>\n            </ul>\n        </div>\n        </div>\n        <div className=\"headerWrap\">\n            <div className=\"gnb cB\" id=\"gnb\">\n                <ul className=\"topmenu\" id=\"head-menu\">\n                    <li className=\"lnb1\">\n                        <a href=\"/Leeting\">Leeting</a>\n                    </li>\n                    <li className=\"lnb2\">\n                        <a href=\"#\" >메뉴2</a>\n                    </li>\n                    <li className=\"lnb3\">\n                        <a href=\"#\" >메뉴3</a>\n                    </li>\n                    <li className=\"lnb4\">\n                        <a href=\"#\" >메뉴4</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default Header;","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Home.js",[],"P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Join.js",["102","103","104","105","106"],"import React from \"react\";\nimport \"./Join.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from \"axios\";\n\nclass Join extends React.Component {\n  \n  constructor(props) {\n      super(props);\n    this.state = {\n      value: 'kakao.com',\n      checkId: false,\n      checkPw: false,\n      checkName: false,\n      checkNickname: false,\n      checkEmail: false,\n      checkMobile: false\n    };\n  }\n  state ={\n    id: \"\",\n    pw: \"\",\n    name: \"\",\n    nickname: \"\",\n    email: \"\",\n    domain: \"\",\n    mobile: \"\",\n  }\n  \n  handleChange = (event) => {\n    if (event.target.value != '직접입력') {\n      this.setState({\n        value: event.target.value,\n        domain: event.target.value,\n        checkEmail: true\n      });\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n      // console.log(event.target.value);\n      document.getElementById('validateDomain').textContent = \"\";\n          document.getElementById('writedomain').value = event.target.value;\n          document.getElementById('writedomain').readOnly=true;\n      }\n    else {\n      this.setState({\n        value: event.target.value,\n        checkEmail: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n          document.getElementById('writedomain').readOnly = false;\n          document.getElementById('writedomain').value = \"\";\n          document.getElementById('writedomain').placeholder = \"입력하세요\";\n      }\n  }\n  idChange = (e) => {\n    var idReg = /^[a-z]+[a-z0-9]{5,19}$/g;\n    if (!idReg.test(e.target.value)) {\n      document.getElementById('validateId').textContent = \"아이디는 영어 소문자로 시작하는 6~20자 영어 소문자 또는 숫자이어야 합니다.\";\n      document.getElementById('validateId').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      document.getElementById('validateId').textContent = \"\";\n      this.setState({\n          id: e.target.value,\n      });\n    }\n  };\n  \n  pwChange = (e) => {\n    var pwReg = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$/g;\n    \n    if (!pwReg.test(e.target.value)) {\n      this.setState({\n        checkPw:false\n    }); \n    // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validatePw').textContent = \"비밀번호는 8자 이상의 문자, 숫자, 특수 문자 조합이어야 합니다.\";\n      document.getElementById('validatePw').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      document.getElementById('validatePw').textContent = \"사용가능한 비밀번호 입니다.\";\n      document.getElementById('validatePw').setAttribute('style', 'color:blue');\n      this.setState({\n          pw: e.target.value,\n          checkPw:true\n      }); \n    }\n\n    \n    if (document.getElementById('inputCPw').value != e.target.value) {\n      this.setState({\n        checkPw:false\n    }); \n    // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateCPw').textContent = \"비밀번호가 다릅니다.\";\n      document.getElementById('validateCPw').setAttribute('style', 'color: #ff3535');\n    }\n    else{\n      this.setState({\n        checkPw:true\n      })\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n        // document.getElementById('joinbtn').disabled = false;\n      // }\n      document.getElementById('validateCPw').textContent = \"확인되었습니다.\";\n      document.getElementById('validateCPw').setAttribute('style', 'color:blue');\n    }\n\n    // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n    //   document.getElementById('joinbtn').disabled = false;\n    // }\n    // console.log(this.state.checkPw);\n  };\n\n  cpwChange = (e) => {\n    if (e.target.value === '') {\n      this.setState({\n        checkPw: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateCPw').textContent = \"\";\n    }\n    else if (document.getElementById('inputPw').value === e.target.value) {\n      this.setState({\n        checkPw:true\n      })\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n      document.getElementById('validateCPw').textContent = \"확인되었습니다.\";\n      document.getElementById('validateCPw').setAttribute('style', 'color:blue');\n    }\n    else {\n      this.setState({\n        checkPw: false\n      });\n      \n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateCPw').textContent = \"비밀번호가 다릅니다.\";\n      document.getElementById('validateCPw').setAttribute('style', 'color: #ff3535');\n    }\n    // console.log(this.state.checkPw);\n  };\n\n  nameChange = (e) => {\n    var nameReg = /^[가-힣]{2,4}$/g;\n    if (!nameReg.test(e.target.value)) {\n      this.setState({\n        checkName: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateName').textContent = \"이름은 2~4자 사이의 한국어 입니다.\";\n      document.getElementById('validateName').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      document.getElementById('validateName').textContent = \"\";\n      this.setState({\n        name: e.target.value,\n        checkName:true\n      });\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n    }\n  };\n\n  nicknameChange = (e) => {\n    var nickNameReg = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|\\*]{2,10}$/g;\n    if (!nickNameReg.test(e.target.value)) {\n      this.setState({\n        checkNickname: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateNickName').textContent = \"닉네임은 2~10자 사이의 한국어, 영어, 숫자로 이루어져 있습니다.\";\n    }\n    else {\n      document.getElementById('validateNickName').textContent = \"\";\n      this.setState({\n        nickname: e.target.value,\n      });\n      // console.log(e.target.value);\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n      // console.log(this.state.checkNickname);\n    }\n  };\n  emailChange = (e) => {\n    this.setState({\n        email: e.target.value,\n    });\n  };\n  domainChange = (e) => {\n    var domainReg = /^([0-9a-zA-Z_-]+)(\\.[0-9a-zA-Z_-]+){2,3}$/g;\n    if (!domainReg.test(e.target.value)) {\n      this.setState({\n        checkEmail: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validateDomain').textContent = \"정확한 도메인을 입력해주세요\";\n      document.getElementById('validateDomain').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      // console.log('test1 : ' + this.state.checkEmail);\n      this.setState({\n        checkEmail: true\n      });\n      // console.log('test2 : ' + e.target.value);\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n      // console.log('test3 : ' + this.state.checkEmail);\n      document.getElementById('validateDomain').textContent = \"\";\n    }\n  };\n  mobileChange = (e) => {\n    var phoneReg = /^\\d{3}-\\d{3,4}-\\d{4}$/;\n    if (!phoneReg.test(e.target.value)) {\n      this.setState({\n        checkMobile: false\n      });\n      // document.getElementById('joinbtn').disabled = true;\n      document.getElementById('validatePhone').textContent = \"휴대폰 번호는 010-1234-5678 형식으로 입력해주세요.\";\n      document.getElementById('validatePhone').setAttribute('style', 'color: #ff3535');\n    }\n    else {\n      // console.log(this.state.checkMobile);\n      this.setState({\n        mobile: e.target.value,\n        checkMobile:true\n      });\n      // console.log('test1 : ' + e.target.value);\n      document.getElementById('validatePhone').textContent = \"\";\n      // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      //   document.getElementById('joinbtn').disabled = false;\n      // }\n      // console.log(this.state.checkMobile);\n    }\n    \n  };\n  sameClick = (e) => {\n    e.preventDefault();\n    // console.log(this.state.id);\n    \n    var idReg = /^[a-z]+[a-z0-9]{5,19}$/g;\n    if (!idReg.test(e.target.value)) {\n      axios.post('http://127.0.0.1:8080/myapp/member/same', {\n        id: this.state.id\n      }).then(res => {\n        // console.log(res.data);\n        if (res.data === \"SUCESS\") {\n          this.setState({\n            checkId: true\n          });\n          document.getElementById('validateId').textContent = \"사용가능한 아이디입니다.\";\n          document.getElementById('validateId').setAttribute('style', 'color:blue');\n          // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n          //   document.getElementById('joinbtn').disabled = false;\n          // }\n        }\n        else {\n          this.setState({\n            checkId: false\n          });\n          // document.getElementById('joinbtn').disabled = true;\n          document.getElementById('validateId').textContent = \"이미 존재하는 아이디입니다.\";\n          document.getElementById('validateId').setAttribute('style', 'color: #ff3535');\n        }\n      });\n    }\n  };\n\n  sameNickClick = (e) => {\n    e.preventDefault();\n    // console.log(this.state.id);\n    \n    var nickNameReg = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|0-9|\\*]{2,10}$/g;\n    if (!nickNameReg.test(e.target.value)) {\n      axios.post('http://127.0.0.1:8080/myapp/member/samenick', {\n        nickname: this.state.nickname\n      }).then(res => {\n        // console.log(res.data);\n        if (res.data === \"SUCESS\") {\n          this.setState({\n            checkNickname: true\n          });\n          document.getElementById('validateNickName').textContent = \"사용가능한 닉네임입니다.\";\n          document.getElementById('validateNickName').setAttribute('style', 'color:blue');\n          // if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n          //   document.getElementById('joinbtn').disabled = false;\n          // }\n        }\n        else {\n          this.setState({\n            checkNickname: false\n          });\n          document.getElementById('validateNickName').textContent = \"이미 존재하는 닉네임입니다.\";\n          document.getElementById('validateNickName').setAttribute('style', 'color: #ff3535');\n        }\n      });\n    }\n  };\n  handleClick = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    if (this.state.checkId === true && this.state.checkEmail === true && this.state.checkMobile === true && this.state.checkName === true && this.state.checkNickname === true && this.state.checkPw === true) {\n      axios.post('http://127.0.0.1:8080/myapp/member/join', {\n        id: this.state.id,\n        pw: this.state.pw,\n        nickname: this.state.nickname,\n        name: this.state.name,\n        email: this.state.email + \"@\" + this.state.domain,\n        mobile : this.state.mobile\n      }).then(res => {\n        //console.log(res);\n        // console.log(res.data);\n        if (res.data === \"SUCESS\") {\n          alert(\"환영합니다~ 로그인 페이지로 이동합니다.\");\n          console.log(\"회원가입 완료\");\n          this.props.history.push('/login');\n        }\n        else {\n          alert(\"회원가입에 실패하였습니다. 메인 페이지로 이동합니다.\");\n          console.log(\"회원가입 실패\");\n          this.props.history.push('/');\n        }\n      })\n    }\n    else {\n      alert(\"입력 정보를 확인해주세요!\");\n      console.log(\"미입력여부\");\n    }\n  };\n  render() {\n    return (\n      <div className=\"joinContainer\">\n        <h1 className=\"tit\">회 원 가 입</h1>\n        <hr />\n        <div className=\"formcenter\">\n          <div>\n            {/* <form action=\"submit\" className=\"signupcustom\" > */}\n              \n              <div className=\"form-group\">\n                <div className=\"col-12\">\n                  <label id=\"labelId\" className=\"font-weight-bold\" htmlFor=\"inputId\">아이디</label>\n                <input type=\"text\" name=\"uid\" id=\"inputId\" className=\"col-9 form-control margin-bottom-20\" placeholder=\"아이디를 입력해주세요\" onChange={this.idChange}></input>\n                <button id=\"checkId\" className=\"btn\" onClick={this.sameClick}>중복 확인</button>\n                </div>\n                <label id=\"validateId\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-9\">\n                  <label id=\"labelPw\" className=\"font-weight-bold\" htmlFor=\"inputPw\">비밀번호</label>\n                  <input type=\"password\" id=\"inputPw\" className=\"form-control margin-bottom-20\" placeholder=\"비밀번호를 입력해주세요\" onChange={this.pwChange}></input>\n                </div>\n                <label id=\"validatePw\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-9\">\n                  <label className=\"font-weight-bold\" id=\"labelCPw\" htmlFor=\"inputCPw\">비밀번호 확인</label>\n                  <input type=\"password\" id=\"inputCPw\" className=\"form-control margin-bottom-20\" placeholder=\"확인용 비밀번호를 입력해주세요\" onChange={this.cpwChange}></input>\n                </div>\n                <label id=\"validateCPw\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-9\">\n                  <label className=\"font-weight-bold\" id=\"labelName\" htmlFor=\"inputName\">성명</label>\n                  <input type=\"text\" id=\"inputName\" className=\"form-control margin-bottom-20\" placeholder=\"한글 이름을 입력해주세요\" onChange ={this.nameChange}></input>\n                </div>\n                <label id=\"validateName\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-12\">\n                  <label className=\"font-weight-bold\" id=\"labelNickName\" htmlFor=\"inputNickName\">닉네임</label>\n                <input type=\"text\" id=\"inputNickName\" className=\"col-9 form-control margin-bottom-20\" placeholder=\"닉네임을 입력해주세요\" onChange={this.nicknameChange}></input>\n                <button id=\"checkNickName\" className=\"btn\" onClick={this.sameNickClick}>중복 확인</button>\n                </div>\n                <label id=\"validateNickName\"></label>\n              </div>\n            <div className=\"form-group\">\n                <div className=\"col-12\">\n                  <label id=\"labelEmail\" className=\"font-weight-bold foremail\" htmlFor=\"email\">이메일</label>\n                  <input type=\"text\" id=\"email\" name=\"inputEmail\" className=\"form-control col-4 margin-bottom-20\" placeholder=\"이메일을 입력해주세요\" onChange={this.emailChange}></input>\n                  &nbsp;<label id=\"at\">@</label>&nbsp;\n                  <input id=\"writedomain\" name=\"inputdomain\" className=\"form-control col-4 margin-bottom-20 inputdomain\" placeholder=\"kakao.com\" onChange={this.domainChange} readOnly></input>&nbsp;\n                  <select id=\"domain\" name=\"selectdomain\" className=\"form-control col-3 margin-bottom-20\" value={this.state.value} onChange={this.handleChange}>\n                          <option value=\"kakao.com\" defaultValue>kakao.com</option>\n                          <option value=\"naver.com\">naver.com</option>\n                          <option value=\"daum.net\">daum.net</option>\n                          <option value=\"직접입력\">직접입력</option>\n                  </select>\n                </div>\n                <label id=\"validateDomain\"></label>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-9\">\n                  <label className=\"font-weight-bold\" id=\"labelPhone\" htmlFor=\"inputPhone\">휴대전화 번호</label>\n                  <input type=\"tel\" id=\"inputPhone\" className=\"form-control margin-bottom-20\" placeholder=\"휴대폰 번호를 입력해주세요\" onChange={this.mobileChange}></input>\n                </div>\n                <label id=\"validatePhone\"></label>\n              </div>\n              <br />\n              <div className=\"form-group\">\n                <div className=\"col-12 text-center\">\n                  <input type=\"checkbox\" id=\"checkjoin\"></input>&nbsp;\n                    <label htmlFor=\"checkjoin\"><span></span> Leeting의 이용약관, 개인정보취급방침 및 개인정보3자제공에 동의합니다.</label>\n                </div>\n              </div>\n              <br />\n              <div className=\"row form-group\">\n                <div className=\"col-6 text-right\">\n                  <a href=\"\" className=\"btn btn-light\">돌아가기</a>\n                </div>\n                <div className=\"col-6\">\n                  <button type=\"submit\" id=\"joinbtn\" className=\"btn btn-primary\" onClick={this.handleClick}>가입하기</button>\n                </div>\n              </div>\n              \n            {/* </form> */}\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\n\nexport default Join;","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Login.js",[],"P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Find.js",["107"],"import React from \"react\";\nimport \"./Find.css\";\n\nclass Find extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { value: '선택하세요' };\n    }\n    handleChange = (event) => {\n        this.setState({ value: event.target.value });\n        if (event.target.value != '직접입력') {\n            document.getElementById('writedomain').value = event.target.value;\n            document.getElementById('writedomain').readOnly=true;\n        }\n        else {\n            document.getElementById('writedomain').readOnly = false;\n            document.getElementById('writedomain').value = \"\";\n            document.getElementById('writedomain').placeholder = \"입력하세요\";\n        }\n    }\n    render() {\n        return (\n            <div className=\"findcontainer\">\n                <div className=\"titles\">\n                    <h1 className=\"tit\">아이디 / 비밀번호 찾기</h1>\n                    <p className=\"subtit\">아이디와 비밀번호는 가입시 입력하신 이메일을 통해 찾을 수 있습니다.</p>\n                </div>\n                <hr />\n                <div className=\"formcenter\">\n                    <input id=\"tab1\" type=\"radio\" name=\"tabs\" defaultChecked></input>\n                    <label className=\"forradio\" htmlFor=\"tab1\">아이디 찾기</label>\n                    <input id=\"tab2\" type=\"radio\" name=\"tabs\"></input>\n                    <label className=\"forradio\" htmlFor=\"tab2\">비밀번호 찾기</label>\n\n                    <form id=\"findids\">\n                        <label className=\"forname\" htmlFor=\"name\">이름</label>\n                        <input type=\"text\" id=\"name\" name=\"inputname\" className=\"form-control col-9 margin-bottom-20\" placeholder=\"이름을 입력해주세요\"></input>\n                        <label id=\"labelemail\" className=\"foremail\" htmlFor=\"email\">이메일</label>\n                        <input type=\"text\" id=\"email\" name=\"inputemail\" className=\"form-control col-4 margin-bottom-20\" placeholder=\"이메일을 입력해주세요\"></input>\n                        &nbsp;<label id=\"at\">@</label>&nbsp;\n                        <input id=\"writedomain\" name=\"inputdomain\" className=\"form-control col-3 margin-bottom-20 inputdomain\" placeholder=\"선택하세요\" readOnly></input>&nbsp;\n                        <select id=\"domain\" name=\"selectdomain\" className=\"form-control col-3 margin-bottom-20\" value={this.state.value} onChange={this.handleChange}>\n                                <option value=\"kakao.com\" defaultValue>kakao.com</option>\n                                <option value=\"naver.com\">naver.com</option>\n                                <option value=\"daum.net\">daum.net</option>\n                                <option value=\"직접입력\">직접입력</option>\n                        </select>\n                    \n                        <div className=\"btndiv\">\n                            <button className=\"btn goback\">돌아가기</button>\n                            <button  className=\"btn find\">아이디 찾기</button>\n                        </div>\n                    </form>\n                    <form id=\"findpws\">\n                        <label className=\"forname\" htmlFor=\"name\">이름</label>\n                        <input type=\"text\" id=\"name\" name=\"inputname\" className=\"form-control col-9 margin-bottom-20\" placeholder=\"이름을 입력해주세요\"></input>\n                        <label className=\"forid\" htmlFor=\"id\">아이디</label>\n                        <input type=\"text\" id=\"id\" name=\"inputid\" className=\"form-control col-9 margin-bottom-20\" placeholder=\"아이디를 입력해주세요\"></input>\n                        <label id=\"labelemail\" className=\"foremail\" htmlFor=\"email\">이메일</label>\n                        <input type=\"text\" id=\"email\" name=\"inputemail\" className=\"form-control col-4 margin-bottom-20\" placeholder=\"이메일을 입력해주세요\"></input>\n                        &nbsp;<label id=\"at\">@</label>&nbsp;\n                        <input id=\"writedomain\" name=\"inputdomain\" className=\"form-control col-3 margin-bottom-20 inputdomain\" placeholder=\"선택하세요\" readOnly></input>&nbsp;\n                        <select id=\"domain\" name=\"selectdomain\" className=\"form-control col-3 margin-bottom-20\" value={this.state.value} onChange={this.handleChange}>\n                                <option value=\"kakao.com\" defaultValue>kakao.com</option>\n                                <option value=\"naver.com\">naver.com</option>\n                                <option value=\"daum.net\">daum.net</option>\n                                <option value=\"직접입력\">직접입력</option>\n                        </select>\n                    \n                        <div className=\"btndiv\">\n                            <button className=\"btn goback\">돌아가기</button>\n                            <button  className=\"btn find\">비밀번호 찾기</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Find;","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\NotFound.js",["108","109"],"import React, { useEffect } from 'react';\nimport \"./NotFound.css\"\n\nfunction NotFound({ history }) {\n    const goBack = () => {\n        history.goBack();\n    };\n    const goHome = () => {\n        history.push('/');\n      };\n    \n      useEffect(() => {\n        console.log(history);\n        const unblock = history.block('정말 떠나실건가요?');\n        return () => {\n          unblock();\n        };\n      }, [history]);\n    \n    return (\n        <div className='notFoundCon'>\n            <img src=\"img/404error.png\" alt=\"404에러\"></img>\n            <p className=\"tit\">페이지를 <span>찾을 수 없습니다.</span><br />\n            (404 Not Found)</p>\n            <p className=\"subtit\">페이지가 존재하지 않거나, 사용할 수 없는 페이지입니다.<br />\n            입력하신 주소가 정확한지 다시 한 번 확인해 주시기 바랍니다.</p>\n\n            <div className=\"btndiv\">\n                <a className=\"goBack\" onClick={goBack}>이전 화면</a>\n                <a className=\"goHome\" onClick={goHome}>홈으로</a>\n            </div>\n        </div>\n    );\n}\n\nexport default NotFound;","P:\\Leeting\\Git\\FrontEnd\\src\\routes\\Leeting.js",["110"],"import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport \"./Slider.css\";\r\nimport \"./Home.css\";\r\n\r\nclass Leeting extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id=\"main_content\">\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n  \r\nexport default Leeting;","P:\\Leeting\\working\\FrontEnd\\src\\index.js",[],["111","112"],"P:\\Leeting\\working\\FrontEnd\\src\\App.js",[],"P:\\Leeting\\working\\FrontEnd\\src\\components\\Header.js",["113","114","115","116","117"],"import React, { Component } from 'react';\nimport \"./Header.css\";\n\nclass Header extends Component {\n    \n    state = {\n        token: ''\n    }\n    componentDidMount() {\n        // nologin = React.createRef();\n    if (sessionStorage.getItem(\"token\") != null) {\n        console.log(\"로그인\");\n        // this.nologin.Attribute('style', 'display:none');\n        document.getElementById('nologin').setAttribute('style', 'display:none');\n        document.getElementById('login').setAttribute('style', 'display:block');\n        // document.getElementsByClassName(\"nologin\").setAttribute('style', 'display:none');\n        // document.getElementsByClassName(\"login\").setAttribute('style', 'display:block');\n    }\n    else {\n        console.log(\"노로그인\");\n        document.getElementById('login').setAttribute('style', 'display:none');\n        document.getElementById('nologin').setAttribute('style', 'display:block');\n    }\n    }\n    logout = (e) => {\n        window.sessionStorage.clear();\n        window.location.replace(\"/\");\n    };\n    render(){\n        return (\n            <div id=\"header\">\n                <div className=\"gtop\">\n                    <div className=\"dvwrap\">\n                    <a className=\"logo\" href=\"/\">\n                        Leeting입니다\n                    </a>\n                    <div className=\"topsearch\">\n                        <form name=\"searchForm\">\n                            <input type=\"text\" name=\"searchVal\" placeholder=\"검색어를 입력하세요\">\n                            </input>\n                            <a href=\"#\">검색</a>\n                        </form>\n                    </div>\n                    <div id=\"nologin\">\n                        <ul>\n                            <li><a href=\"/join\">회원가입</a></li>\n                            <li><a href=\"/Login\">로그인</a></li>\n                        </ul>\n                    </div>\n                    <div id=\"login\">\n                        <ul>\n                            <li><a href=\"/\">{sessionStorage.getItem(\"nickname\")}님 환영합니다</a></li>\n                            <li><a onClick={this.logout}>로그아웃</a></li>\n                        </ul>\n                    </div>\n                </div>\n                </div>\n                <div className=\"headerWrap\">\n                    <div className=\"gnb cB\" id=\"gnb\">\n                        <ul className=\"topmenu\" id=\"head-menu\">\n                            <li className=\"lnb1\">\n                                <a href=\"/Leeting\">Leeting</a>\n                            </li>\n                            <li className=\"lnb2\">\n                                <a href=\"#\" >메뉴2</a>\n                            </li>\n                            <li className=\"lnb3\">\n                                <a href=\"#\" >메뉴3</a>\n                            </li>\n                            <li className=\"lnb4\">\n                                <a href=\"#\" >메뉴4</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n  \n}\n\nexport default Header;","P:\\Leeting\\working\\FrontEnd\\src\\routes\\Find.js",["118","119"],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\Join.js",["120","121","122","123","124"],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\Home.js",[],"P:\\Leeting\\working\\FrontEnd\\src\\components\\Footer.js",["125","126","127"],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\Login.js",["128"],"import React from \"react\";\nimport axios from 'axios';\nimport \"./Login.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Login extends React.Component {\n    state ={\n        id: \"\",\n        pw: \"\",\n    }\n    handleClick = (e) => {\n        e.preventDefault();\n        \n        console.log(this.state);\n        axios.post('http://127.0.0.1:8080/myapp/member/login', {\n            id: this.state.id,\n            pw: this.state.pw\n        }).then(res => {\n            // console.log(res);\n            console.log(res.data.message);\n            if (res.data.message == \"SUCCESS\") {\n                sessionStorage.setItem(\"token\", res.data.token);\n                sessionStorage.setItem(\"nickname\", res.data.nickname);\n                window.location.replace(\"/\");\n            } else {\n                alert(\"아이디와 비밀번호를 확인해주세요.\");\n            }\n        })\n    };\n    idChange = (e) => {\n        this.setState({\n            id: e.target.value,\n        });\n    };\n    pwChange = (e) => {\n        this.setState({\n            pw: e.target.value,\n        });\n    };\n    render() {\n\n        return (\n            <div className=\"logincontainer\">\n                <h1 className=\"tit\">로 그 인</h1>\n                <hr />\n                <div className=\"formcenter\">\n                    <form action=\"get\" className=\"loginform\">\n                        <div className=\"id\">\n                            <p>아이디 </p>\n                            <input type=\"text\" className=\"form-control col-9 margin-bottom-20 logininput\" placeholder=\"아이디를 입력해주세요\" onChange={this.idChange}></input>\n                        </div>\n                        <div className=\"password\">\n                            <p>비밀번호 </p>\n                            <input type=\"password\" className=\"form-control col-9 margin-bottom-20 passinput\" placeholder=\"비밀번호를 입력해주세요\" onChange={this.pwChange}></input>\n                        </div>\n                        <div className=\"col-9 chkbox\">\n                            <div className=\"idstore\">\n                                <input type=\"checkbox\" id=\"idcheck\"></input>&nbsp;\n                            <label htmlFor=\"idcheck\"><span></span>아이디 저장</label>\n                            </div>\n                            <div className=\"autologin\">\n                                <input type=\"checkbox\" id=\"autocheck\"></input>&nbsp;\n                            <label htmlFor=\"autocheck\"><span></span>자동 로그인</label>\n                            </div>\n                        </div>\n                        <div className=\"loginset\">\n                            <div className=\"col-9 defaultlogin\" onClick ={this.handleClick}>로 그 인</div>\n                            <div className=\"col-9 naverlogin\">네이버 로그인</div>\n                            <div className=\"col-9 googlelogin\" >구글 로그인</div>\n                            <div className=\"col-9 kakaologin\" >카카오 계정 로그인</div>\n                        </div>\n                        <div className=\"col-9 usermenu\">\n                            <ul>\n                                <li>\n                                    <a href=\"/find\">\n                                        <img src=\"img/find.png\" alt=\"아이디 찾기\"></img><br />\n                                    아이디 / 비밀번호 찾기\n                                </a>\n                                </li>\n                                <li>\n                                    <a href=\"/join\">\n                                        <img src=\"img/join.png\" alt=\"회원 가입\"></img><br />\n                                    회원 가입\n                                </a>\n                                </li>\n                            </ul>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Login;","P:\\Leeting\\working\\FrontEnd\\src\\routes\\Leeting.js",["129"],"P:\\Leeting\\working\\FrontEnd\\src\\routes\\NotFound.js",["130","131"],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":13,"column":39,"nodeType":"138","endLine":13,"endColumn":67},{"ruleId":"136","severity":1,"message":"137","line":14,"column":41,"nodeType":"138","endLine":14,"endColumn":69},{"ruleId":"136","severity":1,"message":"137","line":15,"column":39,"nodeType":"138","endLine":15,"endColumn":67},{"ruleId":"139","severity":1,"message":"140","line":16,"column":21,"nodeType":"138","endLine":16,"endColumn":33},{"ruleId":"139","severity":1,"message":"140","line":32,"column":25,"nodeType":"138","endLine":32,"endColumn":38},{"ruleId":"139","severity":1,"message":"140","line":35,"column":25,"nodeType":"138","endLine":35,"endColumn":38},{"ruleId":"139","severity":1,"message":"140","line":38,"column":25,"nodeType":"138","endLine":38,"endColumn":38},{"ruleId":"141","severity":1,"message":"142","line":31,"column":28,"nodeType":"143","messageId":"144","endLine":31,"endColumn":30},{"ruleId":"141","severity":1,"message":"142","line":91,"column":51,"nodeType":"143","messageId":"144","endLine":91,"endColumn":53},{"ruleId":"145","severity":1,"message":"146","line":169,"column":46,"nodeType":"147","messageId":"148","endLine":169,"endColumn":47,"suggestions":"149"},{"ruleId":"145","severity":1,"message":"146","line":278,"column":46,"nodeType":"147","messageId":"148","endLine":278,"endColumn":47,"suggestions":"150"},{"ruleId":"139","severity":1,"message":"140","line":413,"column":19,"nodeType":"138","endLine":413,"endColumn":56},{"ruleId":"141","severity":1,"message":"142","line":11,"column":32,"nodeType":"143","messageId":"144","endLine":11,"endColumn":34},{"ruleId":"139","severity":1,"message":"151","line":29,"column":17,"nodeType":"138","endLine":29,"endColumn":56},{"ruleId":"139","severity":1,"message":"151","line":30,"column":17,"nodeType":"138","endLine":30,"endColumn":56},{"ruleId":"152","severity":1,"message":"153","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":14},{"ruleId":"132","replacedBy":"156"},{"ruleId":"134","replacedBy":"157"},{"ruleId":"139","severity":1,"message":"140","line":41,"column":29,"nodeType":"138","endLine":41,"endColumn":41},{"ruleId":"139","severity":1,"message":"151","line":53,"column":33,"nodeType":"138","endLine":53,"endColumn":58},{"ruleId":"139","severity":1,"message":"140","line":65,"column":33,"nodeType":"138","endLine":65,"endColumn":46},{"ruleId":"139","severity":1,"message":"140","line":68,"column":33,"nodeType":"138","endLine":68,"endColumn":46},{"ruleId":"139","severity":1,"message":"140","line":71,"column":33,"nodeType":"138","endLine":71,"endColumn":46},{"ruleId":"141","severity":1,"message":"142","line":173,"column":32,"nodeType":"143","messageId":"144","endLine":173,"endColumn":34},{"ruleId":"141","severity":1,"message":"142","line":198,"column":32,"nodeType":"143","messageId":"144","endLine":198,"endColumn":34},{"ruleId":"141","severity":1,"message":"142","line":32,"column":28,"nodeType":"143","messageId":"144","endLine":32,"endColumn":30},{"ruleId":"141","severity":1,"message":"142","line":92,"column":51,"nodeType":"143","messageId":"144","endLine":92,"endColumn":53},{"ruleId":"145","severity":1,"message":"146","line":170,"column":46,"nodeType":"147","messageId":"148","endLine":170,"endColumn":47,"suggestions":"158"},{"ruleId":"145","severity":1,"message":"146","line":270,"column":46,"nodeType":"147","messageId":"148","endLine":270,"endColumn":47,"suggestions":"159"},{"ruleId":"139","severity":1,"message":"140","line":465,"column":19,"nodeType":"138","endLine":465,"endColumn":56},{"ruleId":"136","severity":1,"message":"137","line":13,"column":39,"nodeType":"138","endLine":13,"endColumn":67},{"ruleId":"136","severity":1,"message":"137","line":14,"column":41,"nodeType":"138","endLine":14,"endColumn":69},{"ruleId":"136","severity":1,"message":"137","line":15,"column":39,"nodeType":"138","endLine":15,"endColumn":67},{"ruleId":"141","severity":1,"message":"160","line":21,"column":34,"nodeType":"143","messageId":"144","endLine":21,"endColumn":36},{"ruleId":"152","severity":1,"message":"153","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":14},{"ruleId":"139","severity":1,"message":"151","line":29,"column":17,"nodeType":"138","endLine":29,"endColumn":56},{"ruleId":"139","severity":1,"message":"151","line":30,"column":17,"nodeType":"138","endLine":30,"endColumn":56},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\*.","Literal","unnecessaryEscape",["163","164"],["165","166"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'Slider' is defined but never used.","Identifier","unusedVar",["161"],["162"],["167","168"],["169","170"],"Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"messageId":"171","fix":"172","desc":"173"},{"messageId":"174","fix":"175","desc":"176"},{"messageId":"171","fix":"177","desc":"173"},{"messageId":"174","fix":"178","desc":"176"},{"messageId":"171","fix":"179","desc":"173"},{"messageId":"174","fix":"180","desc":"176"},{"messageId":"171","fix":"181","desc":"173"},{"messageId":"174","fix":"182","desc":"176"},"removeEscape",{"range":"183","text":"184"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"185","text":"186"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"187","text":"184"},{"range":"188","text":"186"},{"range":"189","text":"184"},{"range":"190","text":"186"},{"range":"191","text":"184"},{"range":"192","text":"186"},[6102,6103],"",[6102,6102],"\\",[10461,10462],[10461,10461],[6122,6123],[6122,6122],[9974,9975],[9974,9974]]